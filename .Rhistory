statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Affected Union") %>%
add_overall(last=TRUE)
df_global %>%
filter(hh_id %in% lst_menage) %>%
filter(if_not_measured_why!="have measured") %>%
select(if_not_measured_why, affected_upazila) %>%
mutate(affected_upazila = factor(affected_upazila, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = affected_upazila,
label = list(
if_not_measured_why  ~ "Reason for being missing in outcome"),
#type = list(
#hhm_age ~ "continuous"
#),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "") %>%
add_overall(last=TRUE)
df_reg <- df_global %>%
filter(hh_id %in% lst_menage) %>%
# Selecting relevant variables
mutate(out_missing = ifelse(if_not_measured_why=="have measured",0,1)) %>%
mutate(time_bin = as.factor(ifelse(survey_year>=2018,1,0)),
affected_upazila = as.factor(affected_upazila))
#stargazer(regsplit,  type = "text", title = "Split and household characteristics")
regnan_1 <- felm(out_missing ~ affected_upazila*time_bin, data=df_reg)
regnan_2 <- felm(out_missing ~ affected_upazila*time_bin + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ affected_upazila*time_bin + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|affected_upazila, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("affected_upazila","time_bin","affected_upazila:time_bin","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "affected_upazila","nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Highly affected
regnan_1 <- felm(out_missing ~ high_exposed*time_bin, data=df_reg)
regnan_2 <- felm(out_missing ~ high_exposed*time_bin + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ high_exposed*time_bin + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|high_exposed, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("high_exposed","time_bin","high_exposed:time_bin","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "high_exposed","nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Affected union
regnan_1 <- felm(out_missing ~ exposed_at_least_zero*time_bin, data=df_reg)
regnan_2 <- felm(out_missing ~ exposed_at_least_zero*time_bin + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ exposed_at_least_zero*time_bin + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|exposed_at_least_zero, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("exposed_at_least_zero","time_bin","exposed_at_least_zero:time_bin","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "exposed_at_least_zero","nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Table 1
df_global %>%
filter(hh_id %in% lst_menage) %>%
select(hhm_status, affected_upazila) %>%
mutate(affected_upazila = factor(affected_upazila, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = affected_upazila,
label = list(
hhm_status  ~ "Member status"),
#type = list(
#hhm_age ~ "continuous"
#),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Affected Upazila") %>%
add_overall(last=TRUE)
# Table 2
df_global %>%
filter(hh_id %in% lst_menage) %>%
select(hhm_status, high_exposed) %>%
mutate(high_exposed = factor(high_exposed, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = high_exposed,
label = list(
hhm_status  ~ "Member status"),
#type = list(
#hhm_age ~ "continuous"
#),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Highly Affected Union") %>%
add_overall(last=TRUE)
# Table 3
df_global %>%
filter(hh_id %in% lst_menage) %>%
select(hhm_status, exposed_at_least_zero) %>%
mutate(exposed_at_least_zero = factor(exposed_at_least_zero, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = exposed_at_least_zero,
label = list(
hhm_status  ~ "Member status"),
#type = list(
#hhm_age ~ "continuous"
#),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Affected Union") %>%
add_overall(last=TRUE)
# niveau individus
lst_menage <- df_r1_hh %>%
mutate(hh_split_r2_r3 = ifelse(hh_split_r3=="1"| hh_split_r2=="1","1","0"),
attrition = ifelse(interview_status_r3=="Complete","0","1")) %>%
filter(hh_split_r2_r3=="0") %>%
filter(attrition=="0") %>%
dplyr::select(hh_id) %>%
pull()
lst_later_join = c('New member through marriage','New member upon return from divorce or seperation','Household merged/combined','Other reasons (permanent)','Residing elsewhere for the pursuit of studies')
#'Death','Married and left household','Divorced and left household','Household split','Left household for employment','Other reasns for leaving the household','New sample household and current round member'
tbl_data <- df_r2_anthr1 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r2 = hhm_status) %>%
plyr::rbind.fill(
df_r2_anthr2 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r2 = hhm_status)) %>%
dplyr::full_join(
df_r3_anthr1 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r3 = hhm_status) %>%
plyr::rbind.fill(
df_r3_anthr2 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r3 = hhm_status))) %>%
dplyr::full_join(
df_r1_anthr1 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r1 = hhm_status) %>%
plyr::rbind.fill(
df_r1_anthr2 %>%
filter(hh_id %in% lst_menage) %>%
select(member_id, hhm_status) %>%
rename(hhm_status_r1 = hhm_status))) %>%
select(member_id, hhm_status_r1, hhm_status_r2, hhm_status_r3) %>%
mutate(hhm_status_r2 = ifelse(is.na(hhm_status_r1) & is.na(hhm_status_r2) & (hhm_status_r3 == "New member (new born)"),"Unborn", ifelse(is.na(hhm_status_r1) & is.na(hhm_status_r2) & (hhm_status_r3 %in% lst_later_join),"Join later",hhm_status_r2)),
hhm_status_r1 = ifelse(is.na(hhm_status_r1) & (hhm_status_r2 == "New member (new born)"),"Unborn",ifelse(is.na(hhm_status_r1) & (hhm_status_r2 %in% c(lst_later_join, "Join later")),"Join later",ifelse(is.na(hhm_status_r1) & (hhm_status_r2 == "Unborn"),"Unborn",  hhm_status_r1))))
tbl_data <- tbl_data %>%
mutate(hhm_status_r1 = replace_na(hhm_status_r1, "Missing"),
hhm_status_r2 = replace_na(hhm_status_r2, "Missing"),
hhm_status_r3 = replace_na(hhm_status_r3, "Missing"))
tbl_data %>%
select(hhm_status_r1, hhm_status_r2, hhm_status_r3) %>%
tbl_strata(
strata = hhm_status_r1,
.tbl_fun =
~ .x %>%
tbl_summary(
by = hhm_status_r3,
label = list(
hhm_status_r3 ~ "Status R3",
hhm_status_r2 ~ "Status R2"
),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = everything() ~ c(0,2),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
# Modify the table header to provide a descriptive label
modify_header(label ~ "Member status in R2 vs R3"),
# Add difference statistics to the table
#add_difference(),
.header = "**{strata}**, N = {n}",
#.combine_with = "tbl_stack",
#.combine_args = list(group_header = NULL),
.quiet = TRUE)
# niveau individus
lst_menage <- df_r1_hh %>%
mutate(hh_split_r2_r3 = ifelse(hh_split_r3=="1"| hh_split_r2=="1","1","0"),
attrition = ifelse(interview_status_r3=="Complete","0","1")) %>%
filter(hh_split_r2_r3=="0") %>%
filter(attrition=="0") %>%
dplyr::select(hh_id) %>%
pull()
all_comb <- df_global %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView::panelview(1 ~ treat_group + weight_kg, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"), display.all = TRUE,
xlab = "Year", ylab = "Nbr individuals", pre.post = TRUE, by.unit=TRUE,  background = "white",cex.main = 20, cex.axis= 8, cex.lab = 12, cex.legend = 12, collapse.history = "TRUE", main = "")
df_reg <- df_global %>%
filter(hh_id %in% lst_menage) %>%
filter(survey_round==3) %>%
# Selecting relevant variables
mutate(out_missing = ifelse(if_not_measured_why=="have measured",0,1)) %>%
mutate(time_bin = as.factor(ifelse(survey_year>=2018,1,0)),
affected_upazila = as.factor(affected_upazila))
#stargazer(regsplit,  type = "text", title = "Split and household characteristics")
regnan_1 <- felm(out_missing ~ affected_upazila, data=df_reg)
regnan_2 <- felm(out_missing ~ affected_upazila + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh  + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ affected_upazila + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|affected_upazila, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("affected_upazila","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "affected_upazila","nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Table 2
regnan_1 <- felm(out_missing ~ high_exposed, data=df_reg)
regnan_2 <- felm(out_missing ~ high_exposed + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ high_exposed + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|high_exposed, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("high_exposed","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Table 3
regnan_1 <- felm(out_missing ~ exposed_at_least_zero, data=df_reg)
regnan_2 <- felm(out_missing ~ exposed_at_least_zero + hhm_sex + hhm_age +  marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65, data=df_reg)
regnan_3 <- felm(out_missing ~ exposed_at_least_zero + hhm_sex + hhm_age + marital_status_hhm + hh_size + literacy_hhm + education_high +  hh_head_religion + hh_ethnic_group + relation_hhh + affected_upazila + nbr_female+ nbr_underfive+ nbr_yngchldrn_5_10 + nbr_teenager_10_20+ nbr_adults_20_65+ nbr_female_underfive+ nbr_female_yngchldrn_5_10 + nbr_female_teenager_10_20 + nbr_female_adults_20_65|0|0|exposed_at_least_zero, data=df_reg)
stargazer(regnan_1, regnan_2,regnan_3, type = "text", title = "Prob. of missing", digits=2, float = TRUE,se.position = "below", omit.stat=c("LL","ser","f","adj.rsq","res.dev"), dep.var.labels.include = TRUE,font.size="small",
se.position = "below",notes.align = "l",table.placement = "H",header = F,
column.labels = c("Binary for missing"),
keep = c("exposed_at_least_zero","hhm_sex" , "hhm_age", "hh_size" ,  "marital_status_hhm", "literacy_hhm", "education_high","hh_head_religion","hh_ethnic_group", "nbr_female", "nbr_underfive", "nbr_yngchldrn_5_10", "nbr_teenager_10_20", "nbr_adults_20_65", "nbr_female_underfive", "nbr_female_yngchldrn_5_10", "nbr_female_teenager_10_20", "nbr_female_adults_20_65"), notes = "Author's owns computations")
# Table 1
df_global_corrected %>%
filter(hh_id %in% lst_menage) %>%
select(weight_kg,height_cm,hhm_sex,hhm_age,relation_hhh,marital_status_hhm,literacy_hhm,education_high,hh_head_religion,hh_ethnic_group, affected_upazila, waz_who, haz_who, bmiz_who) %>%
mutate(affected_upazila = factor(affected_upazila, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE),
hhm_age = as.numeric(hhm_age)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = affected_upazila,
label = list(
hh_head_religion ~ "Religion",
hh_ethnic_group  ~ "Ethnc",
relation_hhh~"Relation with head",
weight_kg ~ "Weight (kg)",
height_cm ~ "Height (cm)",
# affected_upazila ~ "Affected upazila",
hhm_sex ~ "Sex",
hhm_age ~ "Age",
marital_status_hhm ~ "Marital status",
literacy_hhm ~ "Literacy" ,
education_high ~ "Education",
waz_who ~ "WAZ",
haz_who ~ "HAZ",
bmiz_who ~ "BMIZ"),
type = list(
hhm_age ~ "continuous"
),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Affected Upazila") %>%
add_overall(last=TRUE)
# Table 2
df_global_corrected %>%
filter(hh_id %in% lst_menage) %>%
select(weight_kg,height_cm,hhm_sex,hhm_age,relation_hhh,marital_status_hhm,literacy_hhm,education_high,hh_head_religion,hh_ethnic_group, high_exposed, waz_who, haz_who, bmiz_who) %>%
mutate(high_exposed = factor(high_exposed, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE),
hhm_age = as.numeric(hhm_age)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = high_exposed,
label = list(
hh_head_religion ~ "Religion",
hh_ethnic_group  ~ "Ethnc",
relation_hhh~"Relation with head",
weight_kg ~ "Weight (kg)",
height_cm ~ "Height (cm)",
# affected_upazila ~ "Affected upazila",
hhm_sex ~ "Sex",
hhm_age ~ "Age",
marital_status_hhm ~ "Marital status",
literacy_hhm ~ "Literacy" ,
education_high ~ "Education",
waz_who ~ "WAZ",
haz_who ~ "HAZ",
bmiz_who ~ "BMIZ"),
type = list(
hhm_age ~ "continuous"
),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Highly Affected Union") %>%
add_overall(last=TRUE)
# Table 3
df_global_corrected %>%
filter(hh_id %in% lst_menage) %>%
select(weight_kg,height_cm,hhm_sex,hhm_age,relation_hhh,marital_status_hhm,literacy_hhm,education_high,hh_head_religion,hh_ethnic_group, exposed_at_least_zero, waz_who, haz_who, bmiz_who) %>%
mutate(exposed_at_least_zero = factor(exposed_at_least_zero, levels = c("0", "1"), labels = c("No affected", "Affected"), ordered = TRUE),
hhm_age = as.numeric(hhm_age)) %>%
# Generate a summary table using "tbl_summary" for the specified columns
tbl_summary(
by = exposed_at_least_zero,
label = list(
hh_head_religion ~ "Religion",
hh_ethnic_group  ~ "Ethnc",
relation_hhh~"Relation with head",
weight_kg ~ "Weight (kg)",
height_cm ~ "Height (cm)",
# affected_upazila ~ "Affected upazila",
hhm_sex ~ "Sex",
hhm_age ~ "Age",
marital_status_hhm ~ "Marital status",
literacy_hhm ~ "Literacy" ,
education_high ~ "Education",
waz_who ~ "WAZ",
haz_who ~ "HAZ",
bmiz_who ~ "BMIZ"),
type = list(
hhm_age ~ "continuous"
),
statistic = list(
all_categorical() ~ "{n} ({p}%)",
all_continuous() ~ "{mean} ({sd})"
),
missing_text = "(Missing)",
digits = list(all_continuous() ~ c(2,2)),
missing = "ifany"
) %>%
add_p(test=list(all_continuous() ~ "t.test", all_categorical() ~ "fisher.test.simulate.p.values")) %>%
modify_header(label ~ "Affected Union") %>%
add_overall(last=TRUE)
255+1004+3172+104+389+1223
View(all_comb)
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(hh_id) %>% summarise(n=n())
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(hh_id) %>% summarise(n=n()) %>% View(title = 'IsNan')
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>% View(title = 'IsNan')
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>% filter(n==3) %>%  View(title = 'IsNan')
578*3
all_comb
nrow(all_comb)
nrow(df_corrected)
nrow(df_global_corrected)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView::panelview(1 ~ treat_group + weight_kg, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"), display.all = TRUE,
xlab = "Year", ylab = "Nbr individuals", pre.post = TRUE, by.unit=TRUE,  background = "white",cex.main = 20, cex.axis= 8, cex.lab = 12, cex.legend = 12, collapse.history = "TRUE", main = "")
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>% filter(n==3) %>%  View(title = 'IsNan')
nrow(all_comb)
nrow(df_global_corrected)
17782-19233
7*3
(1223+3172)*3+2*(389+104+1004+255+127)+30+52+37+11
17782-17073
709/3
19233-17073
2160/3
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>%  View(title = 'IsNan')
which(is.na(all_comb$treat_group))
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>%  View(title = 'IsNan')
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>% filter(n==3) %>%  View(title = 'IsNan')
all_comb %>% filter(is.na(weight_kg))
all_comb %>% filter(is.na(weight_kg)) %>% View()
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n())
all_comb %>% filter(is.na(weight_kg)) %>%  group_by(member_id) %>% summarise(n=n()) %>% View()
389+104+30*2+1004+255+127+52*2+37*2+11*2
2139+21
1223+389+104+30+3172+1004+255+127+52+37+11
6404*3
6404*3+21
nrow(all_comb)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelview(1 ~ treat_group + haz_who, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", main = "",
ylim = c(-5,5),xlab = "Year", ylab = "Nbr individuals")
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView:panelview(1 ~ treat_group + haz_who, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", main = "",
ylim = c(-5,5),xlab = "Year", ylab = "Nbr individuals")
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView::panelview(1 ~ treat_group + haz_who, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", main = "",
ylim = c(-5,5),xlab = "Year", ylab = "Nbr individuals")
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why, haz_who, bmiz_who) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView::panelview(1 ~ treat_group + haz_who, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", main = "",
ylim = c(-5,5),xlab = "Year", ylab = "Nbr individuals")
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year) %>%
filter(hh_id %in% lst_menage) %>%
tidyr::expand(member_id,survey_year)
# Use with `right_join()` to fill in missing rows (in data)
all_comb <- df_global_corrected %>%
select(hh_id, member_id, survey_year, affected_upazila, treat_group, weight_kg, hhm_age, if_not_measured_why, haz_who, bmiz_who) %>%
filter(hh_id %in% lst_menage) %>%
dplyr::right_join(all_comb, by=c("member_id","survey_year")) %>%
mutate(treat_group = ifelse((survey_year < 2018) & (is.na(treat_group)),0, treat_group))
lst_treat_people <- all_comb %>% filter(treat_group==1) %>% select(member_id) %>% distinct() %>% pull()
all_comb <- all_comb %>%
mutate(treat_group = ifelse((survey_year == 2018) & (is.na(treat_group)) & (member_id %in% lst_treat_people),1, ifelse( (survey_year == 2018) & (is.na(treat_group)) & !(member_id %in% lst_treat_people),0, treat_group)))
panelView::panelview(haz_who ~ treat_group + weight_kg + hhm_age, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", main = "",
ylim = c(-5,5),xlab = "Year", ylab = "Nbr individuals")
panelView::panelview(haz_who ~ treat_group + weight_kg + hhm_age, gridOff = TRUE, by.timing = TRUE, data = all_comb, index = c("member_id","survey_year"),
type = "outcome", by.group = TRUE, cex.main = 20, cex.main.sub = 15,xlab = "Year", ylab = "Nbr individuals")
